steps:

- task: DownloadBuildArtifacts@0
  displayName: 'Download Build Artifacts'
  inputs:
    downloadType: specific

- task: ExtractFiles@1
  displayName: 'Extract Build Zip'
  inputs:
    archiveFilePatterns: '$(Build.ArtifactStagingDirectory)/PowerShellEditorServices-CI/PowerShellEditorServices*.zip'
    destinationFolder: '$(Build.ArtifactStagingDirectory)/PowerShellEditorServices'

- checkout: ComplianceRepo
  displayName: 'Checkout the ComplianceRepo'

- template: EsrpSign.yml@ComplianceRepo
  parameters:
    buildOutputPath: '$(Build.ArtifactStagingDirectory)/PowerShellEditorServices'
    signOutputPath: '$(Build.ArtifactStagingDirectory)/FirstPartySigned'
    alwaysCopy: true # So publishing works
    certificateId: 'CP-230012' # Authenticode certificate
    useMinimatch: true # This enables the use of globbing
    pattern: |
      # PowerShellEditorServices Script
      PowerShellEditorServices/*.{ps1,psd1,psm1,ps1xml}
      PowerShellEditorServices/Commands/**/*.{ps1,psd1,psm1,ps1xml}
      # PowerShellEditorServices Binaries
      PowerShellEditorServices/**/Microsoft.PowerShell.EditorServices*.dll
      # PowerShellEditorServices.VSCode Script
      PowerShellEditorServices.VSCode/PowerShellEditorServices.VSCode.psd1
      # PowerShellEditorServices.VSCode Binary
      PowerShellEditorServices.VSCode/bin/Microsoft.PowerShell.EditorServices.VSCode.dll

- template: EsrpSign.yml@ComplianceRepo
  parameters:
    buildOutputPath: '$(Build.ArtifactStagingDirectory)/FirstPartySigned'
    signOutputPath: '$(Build.ArtifactStagingDirectory)/ThirdPartySigned'
    alwaysCopy: true # So publishing works
    certificateId: 'CP-231522' # Third-party certificate
    useMinimatch: true # This enables the use of globbing
    pattern: |
      **/MediatR.dll
      **/Nerdbank.Streams.dll
      **/Newtonsoft.Json.dll
      **/OmniSharp*.dll
      **/Serilog*.dll
      **/UnixConsoleEcho.dll

- publish: $(Build.ArtifactStagingDirectory)/ThirdPartySigned
  artifact: PowerShellEditorServices
  displayName: 'Publish signed (and unsigned) artifacts'

- checkout: self

- template: assembly-module-compliance.yml@ComplianceRepo
  parameters:
    # binskim
    AnalyzeTarget: '$(Build.ArtifactStagingDirectory)/*.dll'
    AnalyzeSymPath: 'SRV*'
    # component-governance
    sourceScanPath: '$(Build.SourcesDirectory)/PowerShellEditorServices'
    # credscan
    suppressionsFile: ''
    # TermCheck AKA PoliCheck
    targetArgument: '$(Build.SourcesDirectory)/PowerShellEditorServices'
    optionsUEPATH: '$(Build.SourcesDirectory)/PowerShellEditorServices/tools/terms/UserExclusions.xml'
    optionsRulesDBPath: ''
    optionsFTPath: '$(Build.SourcesDirectory)/PowerShellEditorServices/tools/terms/FileTypeSet.xml'
    # tsa-upload
    codeBaseName: 'PowerShell_PowerShellEditorServices_20210201'
    # selections
    APIScan: false
