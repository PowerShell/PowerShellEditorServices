trigger:
- master

jobs:
- job: Windows
  pool:
    vmImage: 'VS2017-Win2016'
  steps:
  - powershell: |
      Get-Module PowerShellGet,PackageManagement | Remove-Module -Force -Verbose
      powershell -Command { Install-Module -Name PowershellGet -MinimumVersion 1.6 -force -confirm:$false -verbose }
      powershell -Command { Install-Module -Name PackageManagement -MinimumVersion 1.1.7.0 -Force -Confirm:$false -Verbose }
      Import-Module -Name PowerShellGet -MinimumVersion 1.6 -Force
      Import-Module -Name PackageManagement -MinimumVersion 1.1.7.0 -Force
      Install-PackageProvider -Name NuGet -Force | Out-Null
      Import-PackageProvider NuGet -Force | Out-Null
      Set-PSRepository -Name PSGallery -InstallationPolicy Trusted | Out-Null
      Install-Module InvokeBuild -MaximumVersion 5.1.0 -Scope CurrentUser -Force | Out-Null
      Install-Module platyPS -RequiredVersion 0.9.0 -Scope CurrentUser -Force | Out-Null
  - powershell: Invoke-Build -Configuration Release
  - task: PublishTestResults@2
    inputs:
      testRunner: NUnit
      testResultsFiles: '**/TestResults.xml'
    condition: succeededOrFailed()

- job: macOS
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - pwsh: scripts/travis.ps1
  - task: PublishTestResults@2
    inputs:
      testRunner: NUnit
      testResultsFiles: '**/TestResults.xml'
    condition: succeededOrFailed()

- job: Linux
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
  - pwsh: scripts/travis.ps1
  - task: PublishTestResults@2
    inputs:
      testRunner: NUnit
      testResultsFiles: '**/TestResults.xml'
    condition: succeededOrFailed()
